// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./data.db"
}

model App {
  appId       String @id @default(uuid())
  mount_total Float
  app_name    String @default("Fotocopia")
}

model User {
  userId       String    @id @default(uuid())
  name         String
  lastname     String
  username     String    @unique
  email        String    @unique
  password     String
  last_session DateTime?

  createBy          String?

  // transaction       Transaction[]
  typeList        TransactionType[]
  categoryList    TransactionCategory[]

  create_at DateTime  @default(now())
  update_at DateTime  @default(now()) @updatedAt
  delete_at DateTime?
}

model Event {
  eventId      String    @id     @default(uuid())

  fullname                  String
  ci                        String
  address                   String
  phone                     String
  email                     String

  downloader_path           String?     @default("")
  
  event_type                String
  event_name                String
  event_quantity_people     Int
  event_character           String
  event_intro               Boolean
  event_cost                Decimal

  event_datetime_date       String
  event_datetime_tiem_start String
  event_datetime_tiem_end   String

  admin_date                String
  admin_status              String
  admin_code                String
  admin_datetime_start      String
  admin_datetime_end        String
  admin_arancel             String      @default("") 
  admin_observation         String      @default("") 
  create_at                 DateTime    @default(now())
  update_at                 DateTime    @default(now())   @updatedAt()
  delete_at                 DateTime?

  coffe_bar                 Boolean
  room                      Boolean
  vip                       Boolean
  cancelationRef            Cancelations?
}

model Cancelations {
  cancelationId     String        @id     @default(uuid())  
  mount_unity       String
  mount_total       Int
  description       String
  cancelationRef    CancelationRef[]
  isCash            Boolean
  eventId           String        @unique
  eventRef          Event         @relation(fields: [eventId], references: [eventId])
}

model CancelationRef {
    cancelationRefId      String    @id      @default(uuid())
    date                  String
    code                  String
    mount                 String
    percentage            String
    cancelationsId        String
    cancelationRef        Cancelations      @relation(fields: [cancelationsId], references: [cancelationId])
}


model Transaction {
  transactionId         String    @id     @default(uuid())
  mount                 Int
  description           String
  date                  String

  categoryId            String
  typeId                String

  createId              String

  create_at             DateTime      @default(now())
  update_at             DateTime      @default(now()) @updatedAt
  delete_at             DateTime?
}

model TransactionCategory {
  transactionCategoryId         String    @id     @default(uuid())
  name                  String
  description                  String

  createId              String
  createReference       User          @relation(fields: [createId], references: [userId])    

  create_at             DateTime      @default(now())
  update_at             DateTime      @default(now()) @updatedAt
  delete_at             DateTime?
}

model TransactionType {
  transactionTypeId         String    @id     @default(uuid())
  name                  String
  description           String
  
  createId              String
  createReference       User          @relation(fields: [createId], references: [userId])    

  create_at             DateTime      @default(now())
  update_at             DateTime      @default(now()) @updatedAt
  delete_at             DateTime?
}


model StaticticsForYear {
  staticticsForYearId         String      @id @default(uuid())
  year                        Int

  month1                      String      @default("1_enero")
  month2                      String      @default("2_febrero")
  month3                      String      @default("3_marzo")
  month4                      String      @default("4_abril")
  month5                      String      @default("5_mayo")
  month6                      String      @default("6_junio")
  month7                      String      @default("7_julio")
  month8                      String      @default("8_agosto")
  month9                      String      @default("9_septiembre")
  month10                     String      @default("10_octubre")
  month11                     String      @default("11_noviembre")
  month12                     String      @default("12_diciembre")

  enero                       Int     @default(0)
  febrero                     Int     @default(0)
  marzo                       Int     @default(0)
  abril                       Int     @default(0)
  mayo                        Int     @default(0)
  junio                       Int     @default(0)
  julio                       Int     @default(0)
  agosto                      Int     @default(0)
  septiembre                  Int     @default(0)
  octubre                     Int     @default(0)
  noviembre                   Int     @default(0)
  diciembre                   Int     @default(0)
}
